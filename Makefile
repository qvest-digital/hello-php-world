SHELL:=/bin/mksh
DBC:=$(basename $(notdir $(wildcard dbconfig/install/*.in)))

AUTOLDR_DIRS+=	common
AUTOLDR_DIRS+=	www

all: metacheck syntaxcheck ${DBC_OUT} var/autoldr.php var/version.php

ifneq (*,${DBC})
d: $(foreach db,${DBC},d-${db})

define dbsystem =
D$1_IN:=dbconfig/install/$1.in
D$1_OUT:=dbconfig/install/$1
D$1_UP:=$$(wildcard dbconfig/upgrade/$1/*)
d-$1: $${D$1_IN}
	@mkdir -p data
	@for rev in $$$$(dbc_share=$$$$PWD; dbc_basepackage=../dbconfig; \
	    dbc_dbtype=$1; dbc_oldversion='0~~~~'; \
	    . /usr/share/dbconfig-common/dpkg/postinst; \
	    _dbc_find_upgrades); do \
		echo apply $1 revision $$$$rev; \
	done
	@rmdir data 2>/dev/null
	@echo 'dbc <$1> in <$${D$1_IN}> up <$${D$1_UP}> out <$${D$1_OUT}>'
endef

$(foreach db,${DBC},$(eval $(call dbsystem,${db})))
else
d:
	@echo nee
endif

clean:
	rm -f var/autoldr.php var/version.php var/*~ www/artifact-version

BINFILES:='\.(png|jpe?g|gif|deb|rpm|vpp|rtf)$$'
metacheck:
	@echo Checking that all files are in UTF-8
	find * -type f -print0 | grep -zEv ${BINFILES} | xargs -0 -- isutf8
	@echo Checking for CVS/git conflict markers
	find * -type f -print0 | grep -zEv ${BINFILES} | xargs -0r mksh -c \
	    'grep -El "^[<>=]{7}( |\$$)" "$$@"; test $$? -eq 1' \
	    hpw-metacheck-helper-cvs
	@echo Ensuring there is no whitespace or CR at end of lines
	find * -type f -print0 | grep -zEv ${BINFILES} | xargs -0r mksh -c \
	    'pcregrep -l $$'\''[\t\x0B-\x0D ]$$'\'' "$$@"; test $$? -eq 1' \
	    hpw-metacheck-helper-eol
	@echo Checking for empty lines or missing newline at EOF
	rv=0; find * -type f -print0 | grep -zEv ${BINFILES} |& \
	    while IFS= read -p -d '' -r name; do \
		if [[ -n "$$(tail -c -1 "$$name")" ]]; then \
			rv=1; \
			print -r -- "$$name: no newline at EOF"; \
		fi; \
		if [[ -s $$name && -z "$$(tail -n 1 "$$name")" ]]; then \
			rv=1; \
			print -r -- "$$name: empty line at EOF"; \
		fi; \
	done; exit $$rv
	@echo All done.

syntaxcheck:
	@echo Running syntax checks, please verify output manually.
	rv=0; find * -name '*.php' -print0 |& while IFS= read -p -d '' -r; do \
		php -l "$$REPLY" | grep -v '^No syntax errors detected in '; \
		(( PIPESTATUS[0] )) && rv=1; \
	done; exit $$rv
	@echo done.

syntaxcheck5:
	@echo Running syntax checks, please verify output manually.
	rv=0; find * -name '*.php' -print0 |& while IFS= read -p -d '' -r; do \
		php5 -l "$$REPLY" | grep -v '^No syntax errors detected in '; \
		(( PIPESTATUS[0] )) && rv=1; \
	done; exit $$rv
	@echo done.

syntaxcheck7:
	@echo Running syntax checks, please verify output manually.
	rv=0; find * -name '*.php' -print0 |& while IFS= read -p -d '' -r; do \
		php7.0 -l "$$REPLY" | grep -v '^No syntax errors detected in '; \
		(( PIPESTATUS[0] )) && rv=1; \
	done; exit $$rv
	@echo done.

var/version.php: debian/changelog
	printf '%s\n' '<?php' '' \
	    '/* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT! */' '' \
	    "define('HPW_VERSION', '$$(dpkg-parsechangelog -n1 | \
	    sed -n '/^Version: /s///p')');" >$@~
	php -l $@~
	echo 'Hello-PHP-World (hello-php-world)' $$(dpkg-parsechangelog -n1 | \
	    sed -n '/^Version: /s///p') >www/artifact-version
	mv -f $@~ $@

var/autoldr.php:
	set -e; set -o pipefail; set -A dirs; ndirs=0; \
	    for dir in ${AUTOLDR_DIRS}; do \
		dirs[ndirs++]=$$PWD/$$dir; \
	    done; \
	    printf '%s\n' '}BEGIN' $$'\t___CLASSLIST___' '}END' | \
	    phpab -n --indent $$'\t' -b "$$PWD" -t php://stdin "$${dirs[@]}" | \
	    sed --posix -e '1,/^}BEGIN/d' -e '/^}END/,$$d' | \
	    printf '%s\n' '<''?php' '$$classlist = array(' "$$(cat)" ');' >$@~
	php -l $@~
	mv -f $@~ $@

.PHONY: all clean metacheck syntaxcheck syntaxcheck5 syntaxcheck7
